{"ast":null,"code":"var _jsxFileName = \"/Users/mangkko/Desktop/React-practice/\\uC720\\uB370\\uBBF8-React/React-Ch3/src/componenets/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  // let filterInfoText = \"2020,2021&2022\";\n\n  // if (filteredYear === \"2019\") {\n  //   filterInfoText = \"2020, 2021 & 2022\";\n  // } else if (filteredYear === \"2021\") {\n  //   filterInfoText = \"2020, 2019 & 2022\";\n  // } else {\n  //   filterInfoText = \"2020, 2019 & 2021\";\n  // }\n  // 위 코드가 권장 방식 (파생 값)\n  // const [filterInfiText, setFilterInfoText] = useState(\"2019,2021 & 2022\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    //   if (selectedYear === \"2019\") {\n    //     setFilterInfoText(\"2020, 2021 & 2022\");\n    //   } else if (selectedYear === \"2020\") {\n    //     setFilterInfoText(\"2019, 2021 & 2022\");\n    //   } else if (selectedYear === \"2021\") {\n    //     setFilterInfoText(\"2020, 2019 & 2022\");\n    //   } else {\n    //     setFilterInfoText(\"2020, 2019 & 2021\");\n    //   }\n  };\n\n  const filteredExpensesByYear = props.items.filter(item => {\n    const year = item.date.getFullYear().toString();\n    return year === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), filteredExpensesByYear.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No expense found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : filteredExpensesByYear.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this)), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpensesByYear","items","filter","item","year","date","getFullYear","toString","className","children","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","length","map","expense","title","amount","id","_c","$RefreshReg$"],"sources":["/Users/mangkko/Desktop/React-practice/유데미-React/React-Ch3/src/componenets/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\n\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  // let filterInfoText = \"2020,2021&2022\";\n\n  // if (filteredYear === \"2019\") {\n  //   filterInfoText = \"2020, 2021 & 2022\";\n  // } else if (filteredYear === \"2021\") {\n  //   filterInfoText = \"2020, 2019 & 2022\";\n  // } else {\n  //   filterInfoText = \"2020, 2019 & 2021\";\n  // }\n  // 위 코드가 권장 방식 (파생 값)\n  // const [filterInfiText, setFilterInfoText] = useState(\"2019,2021 & 2022\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    //   if (selectedYear === \"2019\") {\n    //     setFilterInfoText(\"2020, 2021 & 2022\");\n    //   } else if (selectedYear === \"2020\") {\n    //     setFilterInfoText(\"2019, 2021 & 2022\");\n    //   } else if (selectedYear === \"2021\") {\n    //     setFilterInfoText(\"2020, 2019 & 2022\");\n    //   } else {\n    //     setFilterInfoText(\"2020, 2019 & 2021\");\n    //   }\n  };\n\n  const filteredExpensesByYear = props.items.filter((item) => {\n    const year = item.date.getFullYear().toString();\n    return year === filteredYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      {/* <p>Data for years {filterInfoText} is hidden.</p> */}\n      {filteredExpensesByYear.length === 0 ? (\n        <p>No expense found.</p>\n      ) : (\n        filteredExpensesByYear.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))\n      )}{\" \"}\n      {/**내용이 없다는 뜻 */}\n      {}\n      {/* <ExpenseItem\n        title={props.items[0].title}\n        amout={props.items[0].amount}\n        date={props.items[0].date}\n      />\n      <ExpenseItem\n        title={props.items[1].title}\n        amout={props.items[1].amount}\n        date={props.items[1].date}\n      />\n      <ExpenseItem\n        title={props.items[2].title}\n        amout={props.items[2].amount}\n        date={props.items[2].date}\n      />\n      <ExpenseItem\n        title={props.items[3].title}\n        amout={props.items[3].amount}\n        date={props.items[3].date}\n      /> */}\n    </Card>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,gBAAgB;AACvB,OAAOC,IAAI,MAAM,YAAY;AAE7B,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMC,sBAAsB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAK;IAC1D,MAAMC,IAAI,GAAGD,IAAI,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAC/C,OAAOH,IAAI,KAAKR,YAAY;EAC9B,CAAC,CAAC;EAEF,oBACEJ,OAAA,CAACH,IAAI;IAACmB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACxBjB,OAAA,CAACF,cAAc;MACboB,QAAQ,EAAEd,YAAa;MACvBe,cAAc,EAAEb;IAAoB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,EAEDf,sBAAsB,CAACgB,MAAM,KAAK,CAAC,gBAClCxB,OAAA;MAAAiB,QAAA,EAAG;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAExBf,sBAAsB,CAACiB,GAAG,CAAEC,OAAO,iBACjC1B,OAAA,CAACJ,WAAW;MAEV+B,KAAK,EAAED,OAAO,CAACC,KAAM;MACrBC,MAAM,EAAEF,OAAO,CAACE,MAAO;MACvBf,IAAI,EAAEa,OAAO,CAACb;IAAK,GAHda,OAAO,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACF,CACF,EAAE,GAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAuBF,CAAC;AAEX;AAACpB,EAAA,CA3EQF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA6EjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}