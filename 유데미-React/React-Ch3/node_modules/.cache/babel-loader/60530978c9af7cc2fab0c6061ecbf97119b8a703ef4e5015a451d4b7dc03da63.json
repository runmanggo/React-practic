{"ast":null,"code":"var _jsxFileName = \"/Users/mangkko/Desktop/React-practice/\\uC720\\uB370\\uBBF8-React/React-Ch3/src/componenets/Expenses/ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    lable: \"Jan\",\n    value: 0\n  }, {\n    lable: \"Feb\",\n    value: 0\n  }, {\n    lable: \"Mar\",\n    value: 0\n  }, {\n    lable: \"Apr\",\n    value: 0\n  }, {\n    lable: \"May\",\n    value: 0\n  }, {\n    lable: \"Jun\",\n    value: 0\n  }, {\n    lable: \"Jul\",\n    value: 0\n  }, {\n    lable: \"Aug\",\n    value: 0\n  }, {\n    lable: \"Sep\",\n    value: 0\n  }, {\n    lable: \"Oct\",\n    value: 0\n  }, {\n    lable: \"Nov\",\n    value: 0\n  }, {\n    lable: \"Dec\",\n    value: 0\n  }];\n  for (const expense of props.expense) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","lable","value","expense","expenseMonth","date","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mangkko/Desktop/React-practice/유데미-React/React-Ch3/src/componenets/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    {\n      lable: \"Jan\",\n      value: 0,\n    },\n    {\n      lable: \"Feb\",\n      value: 0,\n    },\n    {\n      lable: \"Mar\",\n      value: 0,\n    },\n    {\n      lable: \"Apr\",\n      value: 0,\n    },\n    {\n      lable: \"May\",\n      value: 0,\n    },\n    {\n      lable: \"Jun\",\n      value: 0,\n    },\n    {\n      lable: \"Jul\",\n      value: 0,\n    },\n    {\n      lable: \"Aug\",\n      value: 0,\n    },\n    {\n      lable: \"Sep\",\n      value: 0,\n    },\n    {\n      lable: \"Oct\",\n      value: 0,\n    },\n    {\n      lable: \"Nov\",\n      value: 0,\n    },\n    {\n      lable: \"Dec\",\n      value: 0,\n    },\n  ];\n  for (const expense of props.expense) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAMC,eAAe,GAAG,CACtB;IACEC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,CACF;EACD,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACI,OAAO,EAAE;IACnC,MAAMC,YAAY,GAAGD,OAAO,CAACE,IAAI,CAACC,QAAQ,CAAC,CAAC;IAC5CN,eAAe,CAACI,YAAY,CAAC,CAACF,KAAK,IAAIC,OAAO,CAACI,MAAM;EACvD;EACA,oBAAOV,OAAA,CAACF,KAAK;IAACa,UAAU,EAAER;EAAgB;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GAxDIf,aAAa;AA0DnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}