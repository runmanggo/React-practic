{"ast":null,"code":"var _jsxFileName = \"/Users/mangkko/Desktop/React-practice/\\uC720\\uB370\\uBBF8-React/React-practice(2)/src/components/UserInput/UserInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"./UserInput.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInput = props => {\n  _s();\n  // const [currentSavings, SetCurrentSaving] = useState(\"\");\n  // const [yearlySavings, SetYearlySavings] = useState(\"\");\n  // const [expectedInterest, setExpectedInterest] = useState(\"\");\n  // const [investmentDuration, SetInvestmentDuration] = useState(\"\");\n\n  const initialUserInput = {\n    \"current-savings\": 10000,\n    \"yearly-contribution\": 1200,\n    \"expected-return\": 7,\n    duration: 10\n  };\n  const [userInput, setUserInput] = useState(initialUserInput);\n\n  /**\n   * resultTable 에다가 인풋 값들을 나오게 해야하는데, userInput컴포넌트와 형제관계\n   * 그래서, app.js에 올려서 ResultTable에다가 내려줘야함\n   * app.js에서 userInput(useState)변수로 작성한 계산함수를 props으로 받고\n   * 파라미터를 UserInput에 있는 userInput(useState)변수 보내버림\n   *\n   */\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onCalculate(userInput); //사용자 입려값을 부모컴포넌트에 전달\n  };\n\n  const resetHandler = () => {\n    setUserInput(initialUserInput);\n  };\n\n  // 인풋의 작성할때마다 업데이트\n  const changeHandler = (input, value) => {\n    setUserInput(prevInput => {\n      return {\n        ...prevInput,\n        [input]: +value\n      };\n    });\n  };\n  //발생하는 input과 값을 입력하는 value 두개 파라미터를 작성해야한다 (현재 함수는 input의 공용함수임)\n  // setUserInput((prevInput)=>{  // 이전 상태를 기반으로 새로운 상태를 계산하여 반환 return 안에는 이전거에다가 새로운거 더해서 업데이트})\n  //상태관리 관련 로직, 태 업데이트 함수를 사용하면 항상 현재 상태에 대한 최신 참조를 보장 가능하기 때문이다\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"current-savings\", event.target.value)\n          /** changeHandler 함수에서 설정한 파라미터를 받기 위해서 화살표 함수로 작성함,\n          함수를 프롭스로 땡겨와서, 해당 input의 ID 값인 current-savings을 가져오고, 이벤트가 실행되면 값을 받게 \n          event.target.value로 작성함*/,\n          value: userInput[\"current-savings\"]\n          /**\n           * 양방향 바인딩 : 사용자가 입력하면 바로 컴포넌트에 동기화 되는 작업\n           */,\n          type: \"number\",\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"yearly-contribution\", event.target.value),\n          value: userInput[\"yearly-contribution\"],\n          type: \"number\",\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes[\"input-group\"],\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"expected-return\", event.target.value),\n          value: userInput[\"expected-return\"],\n          type: \"number\",\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"duration\", event.target.value),\n          value: userInput[\"duration\"],\n          type: \"number\",\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetHandler,\n        type: \"reset\",\n        className: classes.buttonAlt,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: classes.button,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInput, \"OL/F48CuRZxN7OtvePsAMgZjytM=\");\n_c = UserInput;\nexport default UserInput;\nvar _c;\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"names":["React","useState","classes","jsxDEV","_jsxDEV","UserInput","props","_s","initialUserInput","duration","userInput","setUserInput","submitHandler","event","preventDefault","onCalculate","resetHandler","changeHandler","input","value","prevInput","onSubmit","className","form","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","type","id","actions","onClick","buttonAlt","button","_c","$RefreshReg$"],"sources":["/Users/mangkko/Desktop/React-practice/유데미-React/React-practice(2)/src/components/UserInput/UserInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./UserInput.module.css\";\n\nconst UserInput = (props) => {\n  // const [currentSavings, SetCurrentSaving] = useState(\"\");\n  // const [yearlySavings, SetYearlySavings] = useState(\"\");\n  // const [expectedInterest, setExpectedInterest] = useState(\"\");\n  // const [investmentDuration, SetInvestmentDuration] = useState(\"\");\n\n  const initialUserInput = {\n    \"current-savings\": 10000,\n    \"yearly-contribution\": 1200,\n    \"expected-return\": 7,\n    duration: 10,\n  };\n\n  const [userInput, setUserInput] = useState(initialUserInput);\n\n  /**\n   * resultTable 에다가 인풋 값들을 나오게 해야하는데, userInput컴포넌트와 형제관계\n   * 그래서, app.js에 올려서 ResultTable에다가 내려줘야함\n   * app.js에서 userInput(useState)변수로 작성한 계산함수를 props으로 받고\n   * 파라미터를 UserInput에 있는 userInput(useState)변수 보내버림\n   *\n   */\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onCalculate(userInput); //사용자 입려값을 부모컴포넌트에 전달\n  };\n\n  const resetHandler = () => {\n    setUserInput(initialUserInput);\n  };\n\n  // 인풋의 작성할때마다 업데이트\n  const changeHandler = (input, value) => {\n    setUserInput((prevInput) => {\n      return {\n        ...prevInput,\n        [input]: +value,\n      };\n    });\n  };\n  //발생하는 input과 값을 입력하는 value 두개 파라미터를 작성해야한다 (현재 함수는 input의 공용함수임)\n  // setUserInput((prevInput)=>{  // 이전 상태를 기반으로 새로운 상태를 계산하여 반환 return 안에는 이전거에다가 새로운거 더해서 업데이트})\n  //상태관리 관련 로직, 태 업데이트 함수를 사용하면 항상 현재 상태에 대한 최신 참조를 보장 가능하기 때문이다\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes[\"input-group\"]}>\n        <p>\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\n          <input\n            onChange={(event) =>\n              changeHandler(\"current-savings\", event.target.value)\n            }\n            /** changeHandler 함수에서 설정한 파라미터를 받기 위해서 화살표 함수로 작성함,\n          함수를 프롭스로 땡겨와서, 해당 input의 ID 값인 current-savings을 가져오고, 이벤트가 실행되면 값을 받게 \n          event.target.value로 작성함*/\n            value={userInput[\"current-savings\"]}\n            /**\n             * 양방향 바인딩 : 사용자가 입력하면 바로 컴포넌트에 동기화 되는 작업\n             */\n            type=\"number\"\n            id=\"current-savings\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n          <input\n            onChange={(event) =>\n              changeHandler(\"yearly-contribution\", event.target.value)\n            }\n            value={userInput[\"yearly-contribution\"]}\n            type=\"number\"\n            id=\"yearly-contribution\"\n          />\n        </p>\n      </div>\n      <div className={classes[\"input-group\"]}>\n        <p>\n          <label htmlFor=\"expected-return\">\n            Expected Interest (%, per year)\n          </label>\n          <input\n            onChange={(event) =>\n              changeHandler(\"expected-return\", event.target.value)\n            }\n            value={userInput[\"expected-return\"]}\n            type=\"number\"\n            id=\"expected-return\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\n          <input\n            onChange={(event) => changeHandler(\"duration\", event.target.value)}\n            value={userInput[\"duration\"]}\n            type=\"number\"\n            id=\"duration\"\n          />\n        </p>\n      </div>\n      <p className={classes.actions}>\n        <button\n          onClick={resetHandler}\n          type=\"reset\"\n          className={classes.buttonAlt}\n        >\n          Reset\n        </button>\n        <button type=\"submit\" className={classes.button}>\n          Calculate\n          {/**\n           * <form> 안에 위치한 <button type=\"submit\"> 엘리먼트는\n           * 사용자가 클릭하거나 엔터 키를 누를 때 자동으로 <form>을 제출합니다.\n           * 이렇게 하면 onSubmit 이벤트 핸들러가 호출되며, 이벤트 객체가 전달\n           */}\n        </button>\n      </p>\n    </form>\n  );\n};\nexport default UserInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}