{"ast":null,"code":"var _jsxFileName = \"/Users/mangkko/Desktop/React-practice/\\uC720\\uB370\\uBBF8-React/React-practice(2)/src/App.js\",\n  _s = $RefreshSig$();\nimport UserInput from \"./components/UserInput/UserInput\";\nimport Header from \"./components/Header/Header\";\nimport ResultTable from \"./components/ResultTable/ResultTable\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [results, setResults] = useState(null);\n  const calculateHandler = userInput => {\n    const yearlyData = []; // 연도별 데이터를 저장하기 위해서\n\n    let currentSavings = +userInput[\"current-savings\"]; // 현재 저축액\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // 연간저축액\n    const expectedReturn = +userInput[\"expected-return\"] / 100; //예상 이자율\n    const duration = +userInput[\"duration\"]; // 계산기간\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn; //현재 저축액에 대한 연간 이자\n      currentSavings += yearlyInterest + yearlyContribution; //현재저축액 += (현재저축*이자율)\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        // 해당 연도에 발생한 연간 이자\n        savingsEndOfYear: currentSavings,\n        //해당 연도의 마지막에 남은 총 저축액\n        yearlyContribution: yearlyContribution //해당 연도에 발생한 연간 저축 금액\n      });\n    }\n\n    setResults();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"od68SXgl0HKV0v/NdBL6JtLUk7Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["UserInput","Header","ResultTable","useState","jsxDEV","_jsxDEV","App","_s","results","setResults","calculateHandler","userInput","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","_c","$RefreshReg$"],"sources":["/Users/mangkko/Desktop/React-practice/유데미-React/React-practice(2)/src/App.js"],"sourcesContent":["import UserInput from \"./components/UserInput/UserInput\";\nimport Header from \"./components/Header/Header\";\nimport ResultTable from \"./components/ResultTable/ResultTable\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [results, setResults] = useState(null);\n\n  const calculateHandler = (userInput) => {\n    const yearlyData = []; // 연도별 데이터를 저장하기 위해서\n\n    let currentSavings = +userInput[\"current-savings\"]; // 현재 저축액\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // 연간저축액\n    const expectedReturn = +userInput[\"expected-return\"] / 100; //예상 이자율\n    const duration = +userInput[\"duration\"]; // 계산기간\n\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn; //현재 저축액에 대한 연간 이자\n      currentSavings += yearlyInterest + yearlyContribution; //현재저축액 += (현재저축*이자율)\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest, // 해당 연도에 발생한 연간 이자\n        savingsEndOfYear: currentSavings, //해당 연도의 마지막에 남은 총 저축액\n        yearlyContribution: yearlyContribution, //해당 연도에 발생한 연간 저축 금액\n      });\n    }\n    setResults();\n  };\n\n  return (\n    <div>\n      <Header />\n      <UserInput onCalculate={calculateHandler} />\n      <ResultTable />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,kCAAkC;AACxD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,WAAW,MAAM,sCAAsC;AAC9D,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMO,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAIC,cAAc,GAAG,CAACF,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACpD,MAAMG,kBAAkB,GAAG,CAACH,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC;IAC9D,MAAMI,cAAc,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG,CAAC,CAAC;IAC5D,MAAMK,QAAQ,GAAG,CAACL,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;;IAEzC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc,CAAC,CAAC;MACxDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB,CAAC,CAAC;MACvDF,UAAU,CAACO,IAAI,CAAC;QACdC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAAE;QAChCG,gBAAgB,EAAER,cAAc;QAAE;QAClCC,kBAAkB,EAAEA,kBAAkB,CAAE;MAC1C,CAAC,CAAC;IACJ;;IACAL,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACEJ,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACJ,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA,CAACL,SAAS;MAAC2B,WAAW,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CrB,OAAA,CAACH,WAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACnB,EAAA,CA/BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}