{"ast":null,"code":"var _jsxFileName = \"/Users/mangkko/Desktop/React-practice/\\uC720\\uB370\\uBBF8-React/React-practice(2)/src/components/UserInput/UserInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./UserInput.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInput = () => {\n  _s();\n  // const [currentSavings, SetCurrentSaving] = useState(\"\");\n  // const [yearlySavings, SetYearlySavings] = useState(\"\");\n  // const [expectedInterest, setExpectedInterest] = useState(\"\");\n  // const [investmentDuration, SetInvestmentDuration] = useState(\"\");\n\n  const [userInput, setUserInput] = useState({\n    \"current-savings\": 10000,\n    \"yearly-contribution\": 1200,\n    \"expected-return\": 7,\n    duration: 10\n  });\n  const submitHandler = event => {\n    event.preventDefault();\n    const investments = {\n      current: +currentSavings,\n      yearly: +yearlySavings,\n      expected: +expectedInterest,\n      duration: +investmentDuration\n    };\n  };\n  const resetHandler = () => {\n    console.log(\"reset\");\n  };\n  const calculateHandler = () => {\n    console.log(\"cal\");\n  };\n  const changeHandler = (input, value) => {\n    setUserInput(prevInput => {\n      return {\n        ...prevInput\n      };\n    });\n  };\n  //발생하는 input과 값을 입력하는 value 두개 파라미터를 작성해야한다 (현재 함수는 input의 공용함수임)\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"current-savings\", event.target.value)\n          /** changeHandler 함수에서 설정한 파라미터를 받기 위해서 화살표 함수로 작성함,\n          함수를 프롭스로 땡겨와서, 해당 input의 ID 값인 current-savings을 가져오고, 이벤트가 실행되면 값을 받게 \n          event.target.value로 작성함*/,\n          type: \"number\",\n          id: \"current-savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"yearly-contribution\", event.target.value),\n          type: \"number\",\n          id: \"yearly-contribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"expected-return\", event.target.value),\n          type: \"number\",\n          id: \"expected-return\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => changeHandler(\"duration\", event.target.value),\n          type: \"number\",\n          id: \"duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetHandler,\n        type: \"reset\",\n        className: \"buttonAlt\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateHandler,\n        type: \"submit\",\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInput, \"oQBD8qHiUm8KrT0mzgziq9hnPtc=\");\n_c = UserInput;\nexport default UserInput;\nvar _c;\n$RefreshReg$(_c, \"UserInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserInput","_s","userInput","setUserInput","duration","submitHandler","event","preventDefault","investments","current","currentSavings","yearly","yearlySavings","expected","expectedInterest","investmentDuration","resetHandler","console","log","calculateHandler","changeHandler","input","value","prevInput","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","type","id","onClick","_c","$RefreshReg$"],"sources":["/Users/mangkko/Desktop/React-practice/유데미-React/React-practice(2)/src/components/UserInput/UserInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./UserInput.css\";\n\nconst UserInput = () => {\n  // const [currentSavings, SetCurrentSaving] = useState(\"\");\n  // const [yearlySavings, SetYearlySavings] = useState(\"\");\n  // const [expectedInterest, setExpectedInterest] = useState(\"\");\n  // const [investmentDuration, SetInvestmentDuration] = useState(\"\");\n\n  const [userInput, setUserInput] = useState({\n    \"current-savings\": 10000,\n    \"yearly-contribution\": 1200,\n    \"expected-return\": 7,\n    duration: 10,\n  });\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const investments = {\n      current: +currentSavings,\n      yearly: +yearlySavings,\n      expected: +expectedInterest,\n      duration: +investmentDuration,\n    };\n  };\n\n  const resetHandler = () => {\n    console.log(\"reset\");\n  };\n\n  const calculateHandler = () => {\n    console.log(\"cal\");\n  };\n  const changeHandler = (input, value) => {\n    setUserInput((prevInput) => {\n      return {\n        ...prevInput,\n      };\n    });\n  };\n  //발생하는 input과 값을 입력하는 value 두개 파라미터를 작성해야한다 (현재 함수는 input의 공용함수임)\n\n  return (\n    <form onSubmit={submitHandler} className=\"form\">\n      <div className=\"input-group\">\n        <p>\n          <label htmlFor=\"current-savings\">Current Savings ($)</label>\n          <input\n            onChange={(event) =>\n              changeHandler(\"current-savings\", event.target.value)\n            }\n            /** changeHandler 함수에서 설정한 파라미터를 받기 위해서 화살표 함수로 작성함,\n          함수를 프롭스로 땡겨와서, 해당 input의 ID 값인 current-savings을 가져오고, 이벤트가 실행되면 값을 받게 \n          event.target.value로 작성함*/\n            type=\"number\"\n            id=\"current-savings\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\n          <input\n            onChange={(event) =>\n              changeHandler(\"yearly-contribution\", event.target.value)\n            }\n            type=\"number\"\n            id=\"yearly-contribution\"\n          />\n        </p>\n      </div>\n      <div className=\"input-group\">\n        <p>\n          <label htmlFor=\"expected-return\">\n            Expected Interest (%, per year)\n          </label>\n          <input\n            onChange={(event) =>\n              changeHandler(\"expected-return\", event.target.value)\n            }\n            type=\"number\"\n            id=\"expected-return\"\n          />\n        </p>\n        <p>\n          <label htmlFor=\"duration\">Investment Duration (years)</label>\n          <input\n            onChange={(event) => changeHandler(\"duration\", event.target.value)}\n            type=\"number\"\n            id=\"duration\"\n          />\n        </p>\n      </div>\n      <p className=\"actions\">\n        <button onClick={resetHandler} type=\"reset\" className=\"buttonAlt\">\n          Reset\n        </button>\n        <button onClick={calculateHandler} type=\"submit\" className=\"button\">\n          Calculate\n        </button>\n      </p>\n    </form>\n  );\n};\nexport default UserInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}